{
	"info": {
		"_postman_id": "b0326517-6188-4379-8463-c7eec1d5794a",
		"name": "Postman. HW_3 (Tasks)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23410116"
	},
	"item": [
		{
			"name": "/login (Task)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var resp_token = jsonData.token;\r",
							"console.log (resp_token);\r",
							"\r",
							"pm.environment.set(\"token\", resp_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "andrei",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qwerty",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"u_age\":{\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": [\r",
							"                        {\r",
							"                            \"type\": \"string\"\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"integer\"\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"integer\"\r",
							"                        }\r",
							"                    ]\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            },\r",
							"            // \"requered\": [\r",
							"            //     \"u_age\",\r",
							"            //     \"u_name\",\r",
							"            //     \"u_salary_1_5_year\"\r",
							"            // ]\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"    },\r",
							"    // \"requered\": [\r",
							"    //     \"person\",\r",
							"    //     \"qa_salary_after_12_months\",\r",
							"    //     \"qa_salary_after_6_months\",\r",
							"    //     \"start_qa_salary\"\r",
							"    // ]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON Schema check\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"// 3. Тесты по проверке правильности результата перемножения на коэффициент\r",
							"var resp_user_info = pm.response.json();\r",
							"var req_user_info = JSON.parse (pm.request.body.raw)\r",
							"var req_user_salary = req_user_info.salary;\r",
							"console.log (resp_user_info)\r",
							"console.log (req_user_salary)\r",
							"\r",
							"pm.test(\"6 months salary check\", function () {\r",
							"    pm.expect(resp_user_info.qa_salary_after_6_months).to.eql(req_user_salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"12 months salary check\", function () {\r",
							"    pm.expect(resp_user_info.qa_salary_after_12_months).to.eql(req_user_salary * 2.9);\r",
							"});\r",
							"\r",
							"pm.test(\"1.5 year salary check\", function () {\r",
							"    pm.expect(resp_user_info.person.u_salary_1_5_year).to.eql(req_user_salary * 4);\r",
							"});\r",
							"\r",
							"// 4. Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"var resp_user_info = pm.response.json();\r",
							"var resp_u_salary_1_5_year = resp_user_info.person.u_salary_1_5_year\r",
							"console.log (resp_u_salary_1_5_year)\r",
							"\r",
							"pm.environment.set(\"u_salary_1_5_year\", resp_u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 28,\r\n    \"salary\": 700,\r\n    \"name\": \"andrei\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": [\r",
							"                {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                {\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    // \"requered\": [\r",
							"    //     \"age\",\r",
							"    //     \"name\",\r",
							"    //     \"salary\"\r",
							"    // ]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON Schema check\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"// 3. Тесты по проверке правильности результата перемножения на коэффициент\r",
							"var jsonData = pm.response.json();\r",
							"var res_salary_1 = +jsonData.salary[1];\r",
							"var res_salary_2 = +jsonData.salary[2];\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log (req_salary, res_salary_1, res_salary_2)\r",
							"\r",
							"pm.test(\"Salary*2 check\", function () {\r",
							"    pm.expect(res_salary_1).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary*3 check\", function () {\r",
							"    pm.expect(res_salary_2).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"// 4. проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
							"var jsonData = pm.response.json();\r",
							"var res_salary_0 = +jsonData.salary[0];\r",
							"var res_salary_1 = +jsonData.salary[1];\r",
							"var res_salary_2 = +jsonData.salary[2];\r",
							"console.log (res_salary_0, res_salary_1, res_salary_2);\r",
							"\r",
							"pm.test(\"Response salary comparison check 1\", function () {\r",
							"    pm.expect(res_salary_0).to.be.below(res_salary_2);\r",
							"});\r",
							"\r",
							"pm.test(\"Response salary comparison check 2\", function () {\r",
							"    pm.expect(res_salary_1).to.be.below(res_salary_2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						},
						{
							"key": "name",
							"value": "andrei",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "/test_pet_info (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"},\r",
							"    // \"requered\": [\r",
							"    //     \"age\",\r",
							"    //     \"daily_food\",\r",
							"    //     \"daily_sleep\",\r",
							"    //     \"name\"\r",
							"    // ]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON Schema check\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"// 3. Тесты по проверке правильности результата перемножения на коэффициент\r",
							"var jsonData = pm.response.json();\r",
							"var daily_food = jsonData.daily_food;\r",
							"var daily_sleep = +jsonData.daily_sleep;\r",
							"var req = request.data;\r",
							"var req_weight = +req.weight;\r",
							"console.log (req_weight, daily_food, daily_sleep)\r",
							"\r",
							"pm.test(\"Daily food*0.012 (weight) check\", function () {\r",
							"    pm.expect(daily_food).to.eql(req_weight*0.012);\r",
							"});\r",
							"\r",
							"pm.test(\"Daily sleep*2.5 (weight) check\", function () {\r",
							"    pm.expect(daily_sleep).to.eql(req_weight*2.5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Kraken",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": [\r",
							"                        {\r",
							"                            \"type\": \"array\",\r",
							"                            \"items\": [\r",
							"                                {\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                {\r",
							"                                    \"type\": \"integer\"\r",
							"                                },\r",
							"                            ]\r",
							"                        },\r",
							"                        {\r",
							"                            \"type\": \"array\",\r",
							"                            \"items\": [\r",
							"                                {\r",
							"                                    \"type\": \"string\"\r",
							"                                },\r",
							"                                {\r",
							"                                    \"type\": \"integer\"\r",
							"                                },\r",
							"                            ]\r",
							"                        },\r",
							"                    ],\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"},\r",
							"    // \"requered\": [\r",
							"    //     \"age\",\r",
							"    //     \"daily_food\",\r",
							"    //     \"daily_sleep\",\r",
							"    //     \"names\"\r",
							"    // ]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON Schema check\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"// 3. Проверить что занчение поля name = значению переменной name из окружения\r",
							"var env_name = pm.environment.get(\"name\");\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"console.log (env_name, resp_name);\r",
							"\r",
							"pm.test(\"Name compartion check\", function () {\r",
							"    pm.expect(env_name).to.eql(resp_name);\r",
							"});\r",
							"\r",
							"// 4. Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"var req = request.data;\r",
							"var req_age = req.age;\r",
							"console.log (resp_age, req_age)\r",
							"\r",
							"pm.test(\"Age compartion check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						},
						{
							"key": "name",
							"value": "andrei",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/currency (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"function getRandomInt(min, max) {\r",
							"  min = Math.ceil(min);\r",
							"  max = Math.floor(max);\r",
							"  return Math.floor(Math.random() * (max - min + 1)) + min;\r",
							"}\r",
							"rand_currency = getRandomInt(0, 118);\r",
							"console.log (rand_currency);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var resp_rand_currency = jsonData[rand_currency];\r",
							"console.log (resp_rand_currency);\r",
							"\r",
							"var resp_rand_currency_cur_id = resp_rand_currency.Cur_ID;\r",
							"console.log (resp_rand_currency_cur_id);\r",
							"\r",
							"pm.environment.set(\"Cur_ID\", resp_rand_currency_cur_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/curr_byn (Tasks)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 2. Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"Cur_Abbreviation\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Cur_ID\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Cur_Name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"Cur_OfficialRate\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"Cur_Scale\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"Date\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"},\r",
							"    // \"requered\": [\r",
							"    //     \"Cur_Abbreviation\",\r",
							"    //     \"Cur_ID\",\r",
							"    //     \"Cur_Name\",\r",
							"    //     \"Cur_OfficialRate\",\r",
							"    //     \"Cur_Scale\",\r",
							"    //     \"Date\"\r",
							"    // ]\r",
							"};\r",
							"\r",
							"pm.test(\"JSON Schema check\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80//curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"",
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}