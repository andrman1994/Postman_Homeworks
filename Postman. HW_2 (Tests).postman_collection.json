{
	"info": {
		"_postman_id": "d33cedf1-625e-4b1f-ac58-505d38e29cee",
		"name": "Postman. HW_2 (Tests)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23410116"
	},
	"item": [
		{
			"name": "/first (Test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Проверить, что в body приходит правильный string\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3 (Tests)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"var resp_user_info = jsonData;\r",
							"console.log (resp_user_info);\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"console.log (resp_name);\r",
							"\r",
							"pm.test(\"Response name check\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"andrei\");\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = +jsonData.age;\r",
							"console.log (resp_age);\r",
							"\r",
							"pm.test(\"Response age check\", function () {\r",
							"    pm.expect(resp_age).to.eql(28);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = +jsonData.salary;\r",
							"console.log (resp_salary);\r",
							"\r",
							"pm.test(\"Response salary check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(700);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request\r",
							"var req = request.data;\r",
							"console.log (req);\r",
							"\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"var req = request.data;\r",
							"var req_name = req.name;\r",
							"console.log (resp_name, req_name);\r",
							"\r",
							"pm.test(\"Response/Request name check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"var req = request.data;\r",
							"var req_age = req.age;\r",
							"console.log (resp_age, req_age);\r",
							"\r",
							"pm.test(\"Response/Request age check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = jsonData.salary;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log (resp_salary, req_salary);\r",
							"\r",
							"pm.test(\"Response/Request salary check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 11. Вывести в консоль параметр family из response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_family = jsonData.family;\r",
							"console.log (resp_family);\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"var jsonData = pm.response.json();\r",
							"var u_salary_1_5_year = jsonData.salary*4;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log (u_salary_1_5_year, req_salary);\r",
							"\r",
							"pm.test(\"1.5 year salary check\", function () {\r",
							"    pm.expect(u_salary_1_5_year).to.eql(req_salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "andrei",
							"type": "text"
						},
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3 (Tests)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"var resp_user_info = jsonData;\r",
							"console.log (resp_user_info);\r",
							"\r",
							"// 4. Спарсить request\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(req_url);\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_name = req_url.name;\r",
							"console.log (resp_name, req_name);\r",
							"\r",
							"pm.test(\"Response/Request name check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_age = req_url.age;\r",
							"console.log (resp_age, req_age);\r",
							"\r",
							"pm.test(\"Response/Request age check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = jsonData.salary;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_salary = +req_url.salary;\r",
							"console.log (resp_salary, req_salary);\r",
							"\r",
							"pm.test(\"Response/Request salary check\", function () {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_family = jsonData.family;\r",
							"console.log (resp_family);\r",
							"\r",
							"// 9. Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"Dog name availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData.family.pets.dog.name);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"Dog age availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData.family.pets.dog.age);\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр name имеет значение Luky\r",
							"var jsonData = pm.response.json();\r",
							"var dog_name = jsonData.family.pets.dog.name;\r",
							"console.log (dog_name);\r",
							"\r",
							"pm.test(\"Dog name check\", function () {\r",
							"    pm.expect(dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"// 12. Проверить, что параметр age имеет значение 4\r",
							"var jsonData = pm.response.json();\r",
							"var dog_age = jsonData.family.pets.dog.age;\r",
							"console.log (dog_age);\r",
							"\r",
							"pm.test(\"Dog age check\", function () {\r",
							"    pm.expect(dog_age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=andrei&age=28&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "andrei"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4 (Tests)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"var resp_user_info = jsonData;\r",
							"console.log(resp_user_info);\r",
							"\r",
							"// 4. Спарсить request\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(req_url);\r",
							"\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_name = req_url.name;\r",
							"console.log (resp_name, req_name);\r",
							"\r",
							"pm.test(\"Response/Request name check\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_age = +req_url.age;\r",
							"console.log (resp_age, req_age);\r",
							"\r",
							"pm.test(\"Response/Request age check\", function () {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 7. Вывести в консоль параметр salary из request\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_salary = +req_url.salary;\r",
							"console.log (req_salary);\r",
							"\r",
							"// 8. Вывести в консоль параметр salary из response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = jsonData.salary;\r",
							"console.log (resp_salary);\r",
							"\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary0 = jsonData.salary[0];\r",
							"console.log (resp_salary0);\r",
							"\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary1 = jsonData.salary[1];\r",
							"console.log (resp_salary1);\r",
							"\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary2 = jsonData.salary[2];\r",
							"console.log (resp_salary2);\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary0 = jsonData.salary[0];\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_salary = +req_url.salary;\r",
							"console.log (resp_salary0, req_salary);\r",
							"\r",
							"pm.test(\"Response/Request salary check\", function () {\r",
							"    pm.expect(resp_salary0).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary1 = +jsonData.salary[1];\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_salary = +req_url.salary;\r",
							"console.log (resp_salary1, req_salary);\r",
							"\r",
							"pm.test(\"Response salary * 2 check\", function () {\r",
							"    pm.expect(resp_salary1).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary2 = +jsonData.salary[2];\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"var req_salary = +req_url.salary;\r",
							"console.log (resp_salary2, req_salary);\r",
							"\r",
							"pm.test(\"Response salary * 3 check\", function () {\r",
							"    pm.expect(resp_salary2).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"// 15. Передать в окружение переменную name\r",
							"var jsonData = pm.response.json();\r",
							"var resp_name = jsonData.name;\r",
							"console.log(resp_name);\r",
							"\r",
							"pm.environment.set(\"name\", resp_name);\r",
							"\r",
							"// 16. Передать в окружение переменную age\r",
							"var jsonData = pm.response.json();\r",
							"var resp_age = jsonData.age;\r",
							"console.log(resp_age);\r",
							"\r",
							"pm.environment.set(\"age\", resp_age);\r",
							"\r",
							"// 17. Передать в окружение переменную salary\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = jsonData.salary;\r",
							"console.log(resp_salary);\r",
							"\r",
							"pm.environment.set(\"salary\", resp_salary);\r",
							"\r",
							"// 18. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var jsonData = pm.response.json();\r",
							"var resp_salary = Object.keys(jsonData.salary);\r",
							"\r",
							"for (var i of resp_salary){\r",
							"    var resp_salary = jsonData.salary[i]\r",
							"    console.log (+resp_salary)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=andrei&age=28&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "andrei"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2 (Tests)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json\r",
							"var jsonData = pm.response.json();\r",
							"var resp_user_info = jsonData;\r",
							"console.log(resp_user_info);\r",
							"\r",
							"// 4. Спарсить request\r",
							"var req_url = pm.request.url.query.toObject();\r",
							"console.log(req_url);\r",
							"\r",
							"// 5. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Start qa salary availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData.start_qa_salary);\r",
							"});\r",
							"\r",
							"// 6. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Qa 6 months salary availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData.qa_salary_after_6_months);\r",
							"});\r",
							"\r",
							"// 7. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Qa 12 months salary availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData.qa_salary_after_12_months);\r",
							"});\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Qa 1.5 year salary availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData[\"qa_salary_after_1.5_year\"]);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Qa 3.5 year salary availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(jsonData[\"qa_salary_after_3.5_years\"]);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что json response имеет параметр person\r",
							"pm.test(\"Person availability check\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"person\");\r",
							"});\r",
							"\r",
							"// 11. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_start_qa_salary = jsonData.start_qa_salary;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(resp_start_qa_salary, req_salary);\r",
							"\r",
							"pm.test(\"Response/Request salary check\", function () {\r",
							"    pm.expect(resp_start_qa_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 12. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(resp_qa_salary_after_6_months, req_salary);\r",
							"\r",
							"pm.test(\"6 months salary check\", function () {\r",
							"    pm.expect(resp_qa_salary_after_6_months).to.eql(req_salary * 2);\r",
							"});\r",
							"\r",
							"// 13. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(resp_qa_salary_after_12_months, req_salary);\r",
							"\r",
							"pm.test(\"12 months salary check\", function () {\r",
							"    pm.expect(resp_qa_salary_after_12_months).to.eql(req_salary * 2.7);\r",
							"});\r",
							"\r",
							"// 14. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_qa_salary_after_1_5_year = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log (resp_qa_salary_after_1_5_year, req_salary);\r",
							"\r",
							"pm.test(\"1.5 year salary check\", function () {\r",
							"    pm.expect(resp_qa_salary_after_1_5_year).to.eql(req_salary*3.3);\r",
							"});\r",
							"\r",
							"// 15. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var resp_qa_salary_after_3_5_years = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log (resp_qa_salary_after_3_5_years, req_salary);\r",
							"\r",
							"pm.test(\"3.5 years salary check\", function () {\r",
							"    pm.expect(resp_qa_salary_after_3_5_years).to.eql(req_salary*3.8);\r",
							"});\r",
							"\r",
							"// 16. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var res_u_name_salary = +jsonData.person.u_name[1];\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(res_u_name_salary, req_salary);\r",
							"\r",
							"pm.test(\"Request/Response salary check\", function () {\r",
							"    pm.expect(res_u_name_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"// 17. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var res_u_age = +jsonData.person.u_age;\r",
							"var req = request.data;\r",
							"var req_age = +req.age;\r",
							"console.log(res_u_age, req_age);\r",
							"\r",
							"pm.test(\"Request/Response salary check\", function () {\r",
							"    pm.expect(res_u_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"// 18. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"var jsonData = pm.response.json();\r",
							"var res_u_salary_5_years = +jsonData.person.u_salary_5_years;\r",
							"var req = request.data;\r",
							"var req_salary = +req.salary;\r",
							"console.log(res_u_salary_5_years, req_salary);\r",
							"\r",
							"pm.test(\"5 years salary check\", function () {\r",
							"    pm.expect(res_u_salary_5_years).to.eql(req_salary*4.2);\r",
							"});\r",
							"\r",
							"// 19. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var jsonData = pm.response.json();\r",
							"var resp_person = Object.keys(jsonData.person);\r",
							"// console.log (\"response person full -\",resp_person);\r",
							"\r",
							"for (var i of resp_person){\r",
							"    // console.log (typeof i)\r",
							"    var resp_person = jsonData.person[i];\r",
							"    // console.log (\"Type of response person -\",typeof resp_person)\r",
							"    if (typeof resp_person == \"object\"){\r",
							"        for (var ii of resp_person){\r",
							"            console.log (\"response username data -\",ii);\r",
							"        }\r",
							"        continue\r",
							"    }\r",
							"    console.log (\"response person -\", resp_person);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}